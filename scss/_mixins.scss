/*****
    Cellular :: SASS Mixins
    
    (c)2012 Adam Blankenship
*****/
/////
// Fullscreen background image 
@mixin bg_cover($url) {
    background: url($url) no-repeat center;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

/* Fading border
    =linear-gradient($gradients...)
    $prefixes: -webkit-, -moz-, -o-, null
    @each $p in $prefixes
    $g: null
    @each $i in $gradients
    $g: append($g, $p#{'linear-gradient'}#{$i}, comma)
    background-image: $g
    
    
    li + li:before
    content: ''
    display: inline-block
    width: 1px
    height: 272px
    margin: 1em
    +linear-gradient('(rgba(255, 255, 255, 0), #c8c6ae 25%, #c8c6ae 85%, rgba(255, 255, 255, 0))')

//output
        background-image: 
        //-webkit-linear-gradient(0deg, rgba($color2, 0), rgba($color2, 0) 50%, rgba($color2, 0)), 
        -webkit-linear-gradient(0deg, rgba($color, 0), rgba($color, 0.2) 50%, rgba($color, 0)); 
        //-webkit-radial-gradient(50% 100%, ellipse cover, rgba(0,0,0, 0.05), rgba(0,0,0,0) 50%);
        background-image: 
        //-moz-linear-gradient(0deg, rgba(0,0,0,0), rgba(0,0,0,0.1) 50%, rgba(0,0,0,0)), 
        -moz-linear-gradient(0deg, rgba($color, 0), rgba($color, 0.2) 50%, rgba($color, 0)); 
        //-moz-radial-gradient(50% 100%, ellipse cover, rgba(0,0,0, 0.05), rgba(0,0,0,0) 50%);
        background-image: 
        //-ms-linear-gradient(0deg, rgba(0,0,0,0), rgba(0,0,0,0.1) 50%, rgba(0,0,0,0)), 
        -ms-linear-gradient(0deg, rgba($color, 0), rgba($color, 0.2) 50%, rgba($color, 0)); 
        //-ms-radial-gradient(50% 100%, ellipse cover, rgba(0,0,0, 0.05), rgba(0,0,0,0) 50%);
        background-image: 
        //-o-linear-gradient(0deg, rgba(0,0,0,0), rgba(0,0,0,0.1) 50%, rgba(0,0,0,0)), 
        -o-linear-gradient(0deg, rgba($color, 0), rgba($color, 0.2) 50%, rgba($color, 0)); 
        //-o-radial-gradient(50% 100%, ellipse cover, rgba(0,0,0, 0.05), rgba(0,0,0,0) 50%);
        background-image: 
        //linear-gradient(0deg, rgba(0,0,0,0), rgba(0,0,0,0.1) 50%, rgba(0,0,0,0)), 
        linear-gradient(0deg, rgba($color, 0), rgba($color, 0.2) 50%, rgba($color, 0)); 
        //radial-gradient(50% 100%, ellipse cover, rgba(0,0,0, 0.05), rgba(0,0,0,0) 50%);
*/

@mixin border_fade($color) {
    //@if $orient == 'v'
    //@if $orient == 'h'      
    $color2 : lighten($color, 50%);
    $gradient : (0deg, rgba($color, 0), rgba($color, 0.2) 50%, rgba($color, 0));
  
   // @each $p in $prefixes
    //    $g: null
    //        @each $i in $gradients
     //           $g: append($g, $p#{'linear-gradient'}#{$i}, comma)
    
    //background-image: $g;
    background-repeat: no-repeat;
    background-position: 50% 100%;
    background-size: 50% 1px;
    //@each $p in $prefixes
         //append($p, 'background-image:' + $p + '-linear-gradient'+$gradient, comma)
  
}

// Horizontal Linear Gradient
@mixin gradient_x($fallback, $color_1, $color_2) {
    background: $fallback;
    //* IE10 Consumer Preview  
    background-image: -ms-linear-gradient(left, $color_1 0%, $color_2 100%);
    //* Mozilla Firefox
    background-image: -moz-linear-gradient(left, $color_1 0%, $color_2 100%);
    //* Opera 
    background-image: -o-linear-gradient(left, $color_1 0%, $color_2 100%);
    //* Webkit (Safari/Chrome 10)
    background-image: -webkit-gradient(linear, left top, right top, color-stop(0, $color_1), color-stop(1, $color_2));
    //* Webkit (Chrome 11+) 
    background-image: -webkit-linear-gradient(left, $color_1 0%, $color_2 100%);
    //* W3C Markup, IE10 Release Preview 
    background-image: linear-gradient(to right, $color_1 0%, $color_2 100%);
}

// Vertical Linear Gradient
@mixin gradient_y($fallback, $color_1, $color_2) {
    background: $fallback;
    //* IE10 Consumer Preview  
    background-image: -ms-linear-gradient(top, $color_1 0%, $color_2 100%);
    //* Mozilla Firefox
    background-image: -moz-linear-gradient(top, $color_1 0%, $color_2 100%);
    //* Opera 
    background-image: -o-linear-gradient(top, $color_1 0%, $color_2 100%);
    //* Webkit (Safari/Chrome 10)
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, $color_1), color-stop(1, $color_2));
    //* Webkit (Chrome 11+) 
    background-image: -webkit-linear-gradient(top, $color_1 0%, $color_2 100%);
    //* W3C Markup, IE10 Release Preview 
    background-image: linear-gradient(to bottom, $color_1 0%, $color_2 100%);
}

// Radial Gradient
@mixin gradient_rad($fallback, $color_1, $color_2) {
    background: $fallback;
    //* IE10 Consumer Preview 
    background-image: -ms-radial-gradient(center top, ellipse farthest-side, $color_1 0%, $color_2 100%);
    //* Firefox  
    background-image: -moz-radial-gradient(center top, ellipse farthest-side, $color_1 0%, $color_2 100%);
    //* Opera 
    background-image: -o-radial-gradient(center top, ellipse farthest-side, $color_1 0%, $color_2 100%);
    //* Old Webkit (Safari/Chrome 10)
    background-image: -webkit-gradient(radial, center top, 0, center top, 487, color-stop(0, $color_1), color-stop(1, $color_2));
    //* New Webkit (Chrome 11+) 
    background-image: -webkit-radial-gradient(center top, ellipse farthest-side, $color_1 0%, $color_2 100%);
    //* W3C Markup
    background-image: radial-gradient(ellipse farthest-side at center top, $color_2 0%, $color_2 100%);
}


// $from, $to defined using value between 0 & 1
@mixin animate-scale($from, $to) {
    @-webkit-keyframes scale {
        from {
            -webkit-transform: scale($from);
        }
        
        to {
            -webkit-transform: scale($to);
        }
    }
    
    @-moz-keyframes scale {
        from {
            -moz-transform: scale($from);
        }
        
        to {
            -moz-transform: scale($to);
        }
    }
    
    @-ms-keyframes scale {
        from {
            -ms-transform: scale($from);
        }
        
        to {
            -ms-transform: scale($to);
        }
    }
}

// $x & $y defined using percentage
@mixin animate-move($x_start, $x_end, $y_start, $y_end) {
    @-webkit-keyframes move {
        from {
            -webkit-transform: translateX($x_start);
            -webkit-transform: translateY($y_start);
        }
        
        to {
            -webkit-transform: translateX($x_end);
            -webkit-transform: translateY($y_end);
        }
    }
    
    @-moz-keyframes move {
        from {
            -moz-transform: translateX($x_start);
            -moz-transform: translateY($y_start);
        }
        
        to {
            -moz-transform: translateX($x_end);
            -moz-transform: translateY($y_end);
        }
    }
    
    @-ms-keyframes move {
        from {
            -ms-transform: translateX($x_start);
            -ms-transform: translateY($y_start);
        }
        
        to {
            -ms-transform: translateX($x_end);
            -ms-transform: translateY($y_end);
        }
    }
}

//($deg_start, $deg_end) defined using deg
@mixin animate-rotate($deg_start, $deg_end) {
    @-webkit-keyframes rotate {
        from {
            -webkit-transform: rotate($deg_start);
        }
        
        to {
            -webkit-transform: rotate($deg_end);
        }
    }
    
    @-moz-keyframes rotate {
        from {
            -moz-transform: rotate($deg_start);
        }
        
        to {
            -moz-transform: rotate($deg_end);
        }
    }
    
    @-ms-keyframes rotate {
        from {
            -ms-transform: rotate($deg_start);
        }
        
        to {
            -ms-transform: rotate($deg_end);
        }
    }
}

@mixin round ($rad){
    -webkit-border-radius: $rad;
    -moz-border-radius: $rad;
    -khtml-border-radius: $rad;
    border-radius: $rad;
}

@mixin round_top($rad) {
    -webkit-border-top-left-radius: $rad;
    -moz-border-radius-topleft: $rad;
    -khtml-border-radius-topleft: $rad;
    border-top-left-radius: $rad;
    -webkit-border-top-right-radius: $rad;
    -moz-border-radius-topright: $rad;
    -khtml-border-radius-topright: $rad;
    border-top-right-radius: $rad;
}

@mixin round_right($rad) {
    -webkit-border-top-right-radius: $rad;
    -moz-border-radius-topright: $rad;
    -khtml-border-radius-topright: $rad;
    border-top-right-radius: $rad;
    -webkit-border-bottom-right-radius: $rad;
    -moz-border-radius-bottomright: $rad;
    -khtml-border-radius-bottomright: $rad;
    border-bottom-right-radius: $rad;
}

@mixin round_bottom($rad) {
    -webkit-border-bottom-left-radius: $rad;
    -moz-border-radius-bottomleft: $rad;
    -khtml-border-radius-bottomleft: $rad;
    border-bottom-left-radius: $rad;
    -webkit-border-bottom-right-radius: $rad;
    -moz-border-radius-bottomright: $rad;
    -khtml-border-radius-bottomright: $rad;
    border-bottom-right-radius: $rad;
}

@mixin round_left($rad) {
    -webkit-border-bottom-left-radius: $rad;
    -moz-border-radius-bottomleft: $rad;
    -khtml-border-radius-bottomleft: $rad;
    border-bottom-left-radius: $rad;
    -webkit-border-top-left-radius: $rad;
    -moz-border-radius-topleft: $rad;
    -khtml-border-radius-topleft: $rad;
}